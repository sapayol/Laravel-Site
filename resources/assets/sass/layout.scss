body {
	background: $white;
}

.page-wrap {
	@media #{$medium-up} {
		background: transparent;
		position: static;
	}
	@media #{$medium-only} {
		// transform: translateY(-1.7rem);
		& > header, & > header h1 {
			background: transparent;
		}
		& > header h1 {
			margin-bottom: .3rem;
		}
	}
	position: relative;
	background: $white;
	transition: all .4s ease;
	z-index: 9999;
	top: -6.2rem;
	&.headless-page {
		top: -5.8rem;
	}
	&.nav-item-page {
		top: -3.9rem;
	}
	&.descended {
		top: 0 !important;
	}
}

main > section, main > article, main > section > article, main > article > section {
	padding: 1rem 0 2rem 0;
	@media #{$medium-up} { padding: 1.5rem 0 2.5rem 0}
	&:last-child {
		padding-bottom: 4rem;
	}
}

.columns > section {
	padding: 1rem 0 2rem 0;
	@media #{$medium-up} { padding: 1.5rem 0 2.5rem 0}
}

section.panel {
	margin-bottom: 2rem;
	@media #{$medium-up} { margin-bottom: 2.5rem 0}
}


.shrunken-layout {
	main > section, main > article, main > section > article {
		padding-bottom: 0;
	}
}

main > p {
	padding-top: 1rem;
	margin-bottom: 0;
}

.primary-color-section {
	background: $primary-color;
	color: $white;
	p {
		margin-bottom: 0;
	}
}

section.flex-section {
	display: flex;
	flex-direction: column;
	@media #{$large-up} { flex-direction: row }
	div.columns:not(.image-container) {
		display: flex;
		flex-direction: column;
		justify-content: center;
	}
}

.reverse-with-flex {
	display: flex;
	flex-direction: column;
	@media #{$medium-up} { 	flex-direction: column-reverse; }
}


.x-large-block-grid-4 {
	@media #{$xlarge-up} {
	  @include block-grid(
	    // This controls how many elements will be on each row of the block grid. Set this to whatever number you need, up to the max allowed in the variable.
	    // Available options: 1-12 by default, and false.
	    $per-row: 4,

	    // This controls how much space is between each item in the block grid.
	    // Use a variable or any pixel or em values.
	    $spacing: $block-grid-default-spacing,

	    // This controls whether or not base styles come through, set to false to leave out.
	    $base-style: true
  	);
	}
}

.show-order-page section:first-of-type {
	padding-bottom: 0;
}

.two-column-wrapper {
	@media #{$medium-up} {
		.columns:first-child {
			padding-left: 0;
		}
		.columns:last-child {
			padding-right: 0;
		}
	}
}

.padded-columns section {
	padding-right: 2.5rem;
}